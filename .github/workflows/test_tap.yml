name: Test tap-github

on:
  # Run on all pull requests and on pushes to main.
  pull_request:
  push:
    branches:
      - main

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:

    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      ORG_LEVEL_TOKEN: ${{secrets.ORG_LEVEL_TOKEN}}
    strategy:
      matrix:
        python-version: ["3.10", 3.9, 3.8, 3.7]
      # run the matrix jobs one after the other so they can benefit from caching
      max-parallel: 1

    steps:
    - uses: actions/checkout@v2
    - name: Cache github API responses
      uses: actions/cache@v2.1.7
      with:
        # must match the path in tests/__init__.py
        path: 'api_calls_tests_cache.sqlite'
        # github cache expires after 1wk, and we expire the content after 24h
        # this key should not need to change unless we need to clear the cache
        key: api-cache-v3
        restore-keys: api-cache-v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        # Version of Poetry to use
        version: 1.1.13
        virtualenvs-create: true
        virtualenvs-in-project: true
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v2
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}-${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        poetry install
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
    - name: Check formatting with black
      run: |
        poetry run black --check .
    - name: Check typing annotations with mypy
      run: |
        poetry run mypy . --ignore-missing-imports
    - name: Test with pytest
      id: test_pytest
      continue-on-error: true 
      run: |
        poetry run pytest --capture=no
    - name: Test with pytest (run 2)
      id: retry_test_pytest
      if: steps.test_pytest.outcome=='failure'         # check the step outcome, wait and retry
      run: |
        sleep 60m
        poetry run pytest --capture=no
